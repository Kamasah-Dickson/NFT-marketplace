@use "../../sass/mixins.scss" as *;
@use "../../sass/colors.scss" as *;
@use "../../sass/functions.scss" as *;
@use "../../sass/variables&resets.scss" as *;
@use "../../sass/breakpoints.scss" as *;

.hero {
	background-color: var(--very-dark);
	padding-block: rem(40);
	.container {
		@include grid;
		.left-container {
			.button,
			.stats {
				display: none;
			}
			color: var(--white);
			max-width: rem(650);
			h1 {
				margin-bottom: rem(15);
				font-size: $font-small;
				font-size: clamp(1.75rem, 0.8917rem + 3.662vw, 4.1875rem);
				line-height: clamp(2.85rem, 2.2316rem + 2.6385vw, 4.60625rem);
			}
			p {
				// font-size: $font-p;
				font-size: clamp(1rem, 0.868rem + 0.5634vw, 1.375rem);
				line-height: $height-p;
				margin-bottom: rem(40);
				font-family: $work-sans;
			}
		}
		.right-container {
			@include flex;
			flex-direction: column;
			button {
				@include button;
			}
			.card {
				background-color: var(--light-dark);
				border-radius: rem(20);
				margin-bottom: rem(40);
				max-width: rem(400);
				width: 100%;
				.anima {
					width: 100%;
					height: auto;
				}
				.bottom {
					padding: rem(22) rem(20);
					h5 {
						color: var(--white);
						font-size: $font-v-small;
						line-height: $height-v-small;
						font-weight: 600;
					}
					.owner {
						@include flex;
						justify-content: flex-start;
						margin-top: rem(10);
						gap: rem(12);
						span {
							font-size: $font-p;
							line-height: $height-p;
							color: var(--white);
							font-weight: 400;
						}
					}
				}
			}
			button {
				width: 100%;
				max-width: rem(400);
				margin-inline: auto;
				font-size: $font-p;
				line-height: $font-p;
				font-weight: 600;
				font-family: $work-sans;
				cursor: pointer;
				margin-bottom: rem(40);
			}
			.stats {
				@include flex;
				gap: rem(30);
				.stat {
					h5 {
						color: var(--white);
						font-size: $font-v-small;
						font-weight: 700;
					}
					span {
						color: var(--white);
						font-size: $font-p;
					}
				}
			}
		}

		@include breakpoint-min(medium) {
			grid-template-columns: 1fr 1fr;
			gap: rem(30);
			.left-container {
				h1 {
					line-height: $height-medium;
				}
				.button,
				.stats {
					display: block;
					@include flex;
					gap: rem(30);
					justify-content: flex-start;
					.stat {
						justify-content: flex-start;
						h5 {
							color: var(--white);
							font-size: $font-v-small;
							font-weight: 700;
						}
						span {
							color: var(--white);
							font-size: $font-p;
							font-weight: 400;
							font-family: $work-sans;
						}
						.sale {
							span {
								display: block;
							}
						}
					}
				}
				.button {
					width: 100%;
					max-width: rem(224);
					@include button;
					gap: rem(12);
					margin-right: auto;
					font-size: $font-p;
					line-height: $font-p;
					font-weight: 600;
					font-family: $work-sans;
					cursor: pointer;
					margin-bottom: rem(40);
					p {
						margin: 0;
					}
				}
				h1 {
					font-size: $font-medium;
				}
			}
			.right-container {
				.mobile-button {
					display: none;
				}
				.stats {
					display: none;
				}
			}
		}
	}
}
